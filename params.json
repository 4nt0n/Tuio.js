{"name":"Tuio.js","body":"# Tuio.js\r\n\r\nTuio.js is a JavaScript implementation of the [TUIO library](http://www.tuio.org) for multitouch and tangible interaction in the web browser. It brings a 1:1 port of the original [TUIO Java library](http://www.tuio.org/?java). \r\n\r\n### How it works\r\nTUIO is based on the [OSC protocol](http://opensoundcontrol.org/) and usually transferred via UDP. Tuio.js uses node.js and Websockets ([Socket.IO](http://socket.io/)) to push OSC/TUIO messages to the browser. TUIO.js converts the messages to events that applications can register with.\r\n\r\n## Getting Started\r\n### Server\r\n**Install the server via npm:**  \r\n```\r\nnpm install tuio\r\n```\r\n(or put the node_modules/tuio folder into your node_modules folder)\r\n\r\n**Start the example server:**  \r\n```\r\nnode src/server.js\r\n```\r\n(Modify server port in server.js if necessary. You also need to npm install [express](https://github.com/visionmedia/express) for the example server to work.)\r\n\r\n### Client\r\nInclude dist/Tuio.min.js in your HTML page.\r\n\r\n```javascript\r\nvar client = new Tuio.Client({\r\n    host: \"http://localhost:5000\"\r\n}),\r\n\r\nonAddTuioCursor = function(addCursor) {\r\n  console.log(addCursor);\r\n},\r\n\r\nonUpdateTuioCursor = function(updateCursor) {\r\n  console.log(updateCursor);\r\n},\r\n\r\nonRemoveTuioCursor = function(removeCursor) {\r\n  console.log(removeCursor);\r\n},\r\n\r\nonAddTuioObject = function(addObject) {\r\n    console.log(addObject);\r\n},\r\n\r\nonUpdateTuioObject = function(updateObject) {\r\n    console.log(updateObject);\r\n},\r\n\r\nonRemoveTuioObject = function(removeObject) {\r\n    console.log(removeObject);\r\n},\r\n\r\nonRefresh = function(time) {\r\n  console.log(time);\r\n};\r\n\r\nclient.on(\"addTuioCursor\", onAddTuioCursor);\r\nclient.on(\"updateTuioCursor\", onUpdateTuioCursor);\r\nclient.on(\"removeTuioCursor\", onRemoveTuioCursor);\r\nclient.on(\"addTuioObject\", onAddTuioObject);\r\nclient.on(\"updateTuioObject\", onUpdateTuioObject);\r\nclient.on(\"removeTuioObject\", onRemoveTuioObject);\r\nclient.on(\"refresh\", onRefresh);\r\nclient.connect();\r\n```\r\n\r\n## Documentation\r\nThe API is modeled after the [TUIO Java library](http://www.tuio.org/?java). Also see the source and examples on how to use the library. In most cases, you probably only need some events (addTuioCursor, removeTuioObject, etc.) or the methods client.getTuioCursors() and client.getTuioObjects().\r\n\r\n## Examples\r\n_See examples folder_\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt](https://github.com/cowboy/grunt).\r\n\r\n## License\r\nLicensed under the GPL license.","tagline":"TUIO Reference Implementation for JavaScript","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}